version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: train_booking_db
    environment:
      POSTGRES_DB: train_booking
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - train_booking_network

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: train_booking_backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: train_booking
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: your_jwt_secret_key_here_change_in_production
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - train_booking_network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: train_booking_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - train_booking_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  train_booking_network:
    driver: bridge

